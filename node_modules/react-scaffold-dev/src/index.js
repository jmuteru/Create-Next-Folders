#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import chalk from 'chalk';
import prompts from 'prompts';

const folderStructure = {
  pageRouter: [
    'pages/api',            // API routes
    'pages/components',     // Components for easy routing and layout management
    'components/common',    // Reusable common components
    'components/layout',    // Layout components
    'styles',               // Global styles
    'public',               // Static files (images, fonts)
    'hooks',                // Custom React hooks
    'contexts',             // React context for global state
    'services',             // API calls and services
    'store',                // Store for state management (e.g., Redux)
    'types',                // TypeScript types
    'tests',                // Unit and integration tests
  ],
  appRouter: [
    'app/api',              // API routes for app router
    'app/components',       // Layout components
    'components/common',    // Reusable common components
    'components/layout',    // Layout components
    'styles',               // Global styles
    'public',               // Static files (images, fonts)
    'hooks',                // Custom React hooks
    'contexts',             // React context for global state
    'services',             // API calls and services
    'store',                // Store for state management (e.g., Redux)
    'types',                // TypeScript types
    'tests',                // Unit and integration tests
  ],
};

(async () => {
  const response = await prompts([
    {
      type: 'select',
      name: 'language',
      message: 'Choose the language for the project:',
      choices: [
        { title: 'TypeScript', value: 'ts' },
        { title: 'JavaScript', value: 'js' },
      ],
    },
    {
      type: 'select',
      name: 'router',
      message: 'Choose the routing strategy for the project:',
      choices: [
        { title: 'Page Router (Traditional)', value: 'pageRouter' },
        { title: 'App Router (Next.js 13+)', value: 'appRouter' },
      ],
    },
  ]);

  const ext = response.language === 'ts' ? 'ts' : 'js';
  const routerType = response.router;
  const rootDir = process.cwd();

  console.log(chalk.green(`\nSetting up the Next.js project structure with ${routerType} in ${rootDir}...`));

  // Create folders based on router type
  folderStructure[routerType].forEach((folder) => {
    const fullPath = path.join(rootDir, folder);
    fs.mkdirSync(fullPath, { recursive: true });
  });

  // Create sample files based on the selected router
  const sampleFiles = {
    [`${routerType === 'pageRouter' ? 'pages' : 'app'}/index.${ext}`]: `import React from 'react';\n\nexport default function Home() {\n  return <div>Hello, World!</div>;\n}`,
    [`${routerType === 'pageRouter' ? 'pages' : 'app'}/api/hello.${ext}`]: `export default function handler(req, res) {\n  res.status(200).json({ message: 'Hello, Next.js!' });\n}`,
    [`components/common/Header.${ext}`]: `import React from 'react';\n\nconst Header = () => {\n  return <header><h1>Welcome to Next.js</h1></header>;\n};\n\nexport default Header;`,
    [`components/layout/MainLayout.${ext}`]: `import React from 'react';\nimport Header from '../common/Header';\n\nconst MainLayout = ({ children }) => {\n  return (\n    <div>\n      <Header />\n      <main>{children}</main>\n    </div>\n  );\n};\n\nexport default MainLayout;`,
    [`styles/globals.${ext === 'ts' ? 'ts' : 'js'}`]: `import '../styles/globals.css';\n\nexport default function App({ Component, pageProps }) {\n  return <Component {...pageProps} />;\n}`,
    [`public/favicon.ico`]: 'Favicon for the app (can be added as needed)', // Placeholder
  };

  Object.entries(sampleFiles).forEach(([filePath, content]) => {
    fs.writeFileSync(path.join(rootDir, filePath), content);
  });

  console.log(chalk.green('\nNext.js project setup complete! Happy coding!'));
})();
